name: Scenario 1 - TestContainers Tests

on:
  push:
    paths:
      - 'scenario1-testcontainers/**'
      - '.github/workflows/scenario1-test.yml'
  pull_request:
    paths:
      - 'scenario1-testcontainers/**'
  workflow_dispatch:  # Allow manual trigger

jobs:
  test-fantasy-vs-reality:
    name: Fantasy vs Reality Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        run: |
          cd scenario1-testcontainers
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify Docker is available
        run: |
          docker --version
          docker ps

      - name: Run Fantasy Tests (Mocks - The Lie)
        run: |
          cd scenario1-testcontainers
          pytest tests/test_fantasy.py -v --tb=short
        continue-on-error: false

      - name: Run Reality Tests (TestContainers - The Truth)
        run: |
          cd scenario1-testcontainers
          pytest tests/test_reality.py -v --tb=short
        timeout-minutes: 5

      - name: Verify container cleanup
        if: always()
        run: |
          echo "Checking for orphaned containers..."
          docker ps -a --filter "label=org.testcontainers=true"

      - name: Cleanup orphaned containers
        if: always()
        run: |
          docker ps -a --filter "label=org.testcontainers=true" -q | xargs -r docker rm -f || true

  test-with-coverage:
    name: Tests with Coverage Report
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          cd scenario1-testcontainers
          pip install -r requirements.txt
          pip install pytest-cov

      - name: Run tests with coverage
        run: |
          cd scenario1-testcontainers
          pytest tests/ -v --cov=. --cov-report=term-missing --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-report
          path: scenario1-testcontainers/htmlcov/

  verify-setup-script:
    name: Verify Setup Script Works
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Run setup script
        run: |
          cd scenario1-testcontainers
          python3 setup.py

      - name: Verify installation
        run: |
          cd scenario1-testcontainers
          source venv/bin/activate
          python -c "import testcontainers; import psycopg; import flask; print('âœ… All imports successful')"

  test-multiple-python-versions:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.10', '3.11', '3.12']
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          cd scenario1-testcontainers
          pip install -r requirements.txt

      - name: Run Reality Tests
        run: |
          cd scenario1-testcontainers
          pytest tests/test_reality.py -v
